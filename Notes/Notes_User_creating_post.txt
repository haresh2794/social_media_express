How to reduce Duplication in {userlog: true, avatar: req.session.user.avatar, username: req.session.user.username} 
at every Template file?
 - app.use(function(req,res,next){
    res.locals.user = req.session.user
    next()
}) //This will create a local user in the server file and the the router is called
- In the userController is there is a session user created the mustBeLoggedIn will create a session.
    This will be called before the router is redirected else the warn comes in.


- Since we get the req.session.user as a local in the server we can leverage it in all templates. and not have a dif arg

How to create a post?
 - in the form html sent a post req to the url 
 - in the router redirect the post request to the controller create function
 - in the postController require the model file
 - Create the the post obj with the Post blue print under the create function.
 - Leverage the create function in the model at the controller as a promise. Use then to res or catch res with the err.
 - The catch will catch the reject
 - the then() will cathc the resolve. 

 Post.js
 - In the Post model file create the blue print with the input and the data provided in the post obj created at the controller
 - Create the methods with the prototype sytex
 - we will need a validate and clean up before create
 - the create should be a promise function.
 - If there are no errors resolve, else reject.
 - Since mongoDB return a promise we leverage that in the after the insertOne and then catch

How to add author feature?
 - in userController login and reg session creation add the  _id: user.data._id
 - add the attribute to create the post obj and 
 - in the cleanup provide the  author: ObjectID(this.userId), to use ObjectID, we need to require mongoDB ObjectID at top. 

How to add custom post view route?
 - add the route get req with a post/:id this will take any value to :id and in the controller res with the render

How to create functionalities to view the post by Id?
 - In the post controller add a function that will view the post. 
 - create a post obj not with the blue print but just a call method inside
 - call the func and create it in the model. 
 - The findSingleByID func is a promise fucn we will check the db for post by id using ObjectID, else return false. 
 - Security first check for maliciaos code and return reject is false
 - resolve with the post
 - call the render with the post obj which will be received by temp to further process at ejs.

Why is it challenging to pull the user gravatar and unsername?
 - Because we have only save the userId with the post
 - and the req.session cannot be used because it is not the auther who is going to read the post (ComedyHAHAHAH)

How to create lookup with MongoDB?
 - Using the aggregate function we form match, lookup and project obj. 
 - Then convert it to a array.
 - The project will combine the author into one obj
 - Map the array to a new array with the necessary elements.
 - Import the user controller to retrive the avatar. Here a new obj is created with the post author, and avatar true that will retrive a avatar of the user.
 The default is set to undefined

How to insert username and profile pic to profile page?
 - This is a bit challenging, we need to look for the existance of the profile first.
 - Then render the profile page with the details.
 - To do this in the find by username funtion must be called in model and the return should contain the username and avatar.
 - Else reject to return.
 - Use this return in the next() and the field as the element for render.
 - Here the user is created with the new data and the elements are assigned to the user again to only have the required stuff

How to set up the array of posts?
 - reusablePostQuery gives a array of post related to the lookup func. In this case the user ID.
 - Utilize that in the controller of user and add the array to the render obj. 

How to know the user is a visitor or dif user?
 - at a Local at the server with a condition if req.session.user, req.visitorId = req.session.user._id, else req.visitor = 0 (guest case)
 - Call this at necessary location like, editing post, viewig edit symbol etc. The arg will be called at Post blue print
 -  post.isVisitorOwner = post.authorId.equals(visitorId) will return true or false
 - Here we are adding this arrt to every obj in the array of post. 

How to edit a post?
 - Give the edit page the get requst and render the page. through the router signal
 - Give the save update form button the post request.
 - Direct to the controller edit.
 - Create a Post obj with the data
 - Send it to the Update func in the Post Model anfd have a then and catch
 - The edit must contain positive permission and no permission. The update will be a promise
 - The update will use the findSingleByID which will have two arg,  requestedId and the userId
 - This will return a array wiht the true or flse for isVisitorOwner
 - Using this we can reject or update.
 - The actual update is done in actually update.
 - Here the text is cleaned and validated anf then findoneandupdated is givn with success and failure resolves
 - The update resolve is done after. 
 - The controller receives and and responds depding on the resolve value. 
