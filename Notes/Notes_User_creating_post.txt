How to reduce Duplication in {userlog: true, avatar: req.session.user.avatar, username: req.session.user.username} 
at every Template file?
 - app.use(function(req,res,next){
    res.locals.user = req.session.user
    next()
}) //This will create a local user in the server file and the the router is called
- In the userController is there is a session user created the mustBeLoggedIn will create a session.
    This will be called before the router is redirected else the warn comes in.


- Since we get the req.session.user as a local in the server we can leverage it in all templates. and not have a dif arg

How to create a post?
 - in the form html sent a post req to the url 
 - in the router redirect the post request to the controller create function
 - in the postController require the model file
 - Create the the post obj with the Post blue print under the create function.
 - Leverage the create function in the model at the controller as a promise. Use then to res or catch res with the err.
 - The catch will catch the reject
 - the then() will cathc the resolve. 

 Post.js
 - In the Post model file create the blue print with the input and the data provided in the post obj created at the controller
 - Create the methods with the prototype sytex
 - we will need a validate and clean up before create
 - the create should be a promise function.
 - If there are no errors resolve, else reject.
 - Since mongoDB return a promise we leverage that in the after the insertOne and then catch

How to add author feature?
 - in userController login and reg session creation add the  _id: user.data._id
 - add the attribute to create the post obj and 
 - in the cleanup provide the  author: ObjectID(this.userId), to use ObjectID, we need to require mongoDB ObjectID at top. 

How to add custom post view route?
 - add the route get req with a post/:id this will take any value to :id and in the controller res with the render
